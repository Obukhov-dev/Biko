from pywebio import start_server
from pywebio.input import *
from pywebio.output import *
from pywebio.session import run_async, run_js

# –î–ª—è ..
import asyncio

#
chat_msgs = []
online_users = set()

# –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç–µ
MAX_MESSAGES_COUNT = 100


async def main():
    """
    –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.

    :return:
    """
    # –í—Å–µ glob —Å–æ–æ–±—â–µ–Ω–∏—è
    global chat_msgs

    put_markdown("## Biko \n –ó–∞—â–∏—â–µ–Ω–Ω—ã–π. –ë—ã—Å—Ç—Ä—ã–π. –°–≤–æ–±–æ–¥–Ω—ã–π.")
    msg_box = output()
    put_scrollable(msg_box, height=300, keep_bottom=True)
    nickname = await input("–í–æ–π—Ç–∏ –≤ —á–∞—Ç", required=True, placeholder="–í–∞—à–µ –∏–º—è",
                           validate=lambda n: "–¢–∞–∫–æ–π –Ω–∏–∫ —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è!" if n in online_users or n == 'üì¢' else None)
    online_users.add(nickname)

    chat_msgs.append(('üîä ', f'`{nickname}` –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ —á–∞—Ç—É!'))
    msg_box.append(put_markdown(f'üîä `{nickname}` –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ —á–∞—Ç—É'))

    # —Ñ—É–Ω–∫—Ü–∏—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
    refresh_task = run_async(refresh_msg(nickname, msg_box))

    # –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª –≤ –æ–∂–∏–¥–∞–Ω–∏–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —é–∑–≤–µ—Ä–µ–º
    while True:
        data = await input_group("üí¨ –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ", [
            input(placeholder="–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è", name="msg"),
            actions(name="cmd", buttons=["–û—Ç–ø—Ä–∞–≤–∏—Ç—å", {'label': '–í—ã–π—Ç–∏ –∏–∑ —á–∞—Ç–∞', 'type': 'cancel'}])
        ], validate=lambda m: ('msg', "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è!") if m["cmd"] == "–û—Ç–ø—Ä–∞–≤–∏—Ç—å" and not m['msg'] else None)

        if data is None:
            break

        msg_box.append(put_markdown(f"`{nickname}` : {data['msg']}"))
        chat_msgs.append((nickname, data['msg']))

    # exit chat
    refresh_task.close()

    online_users.remove(nickname)
    toast("–í—ã –≤—ã—à–ª–∏ –∏–∑ —á–∞—Ç–∞")
    msg_box.append(put_markdown(f"üîä  `{nickname}` –ø–æ–∫–∏–Ω—É–ª —á–∞—Ç"))
    chat_msgs.append(('üîä', f"  `{nickname}` –ø–æ–∫–∏–Ω—É–ª —á–∞—Ç"))

    put_buttons(['–ü–µ—Ä–µ–∑–∞–π—Ç–∏'], onclick=lambda btn: run_js('window.location.reload()'))


# –°–∞–º–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç–µ, –∫–æ—Ç–æ—Ä–∞—è –∫–∞–∂–¥—É—é 1 —Å–µ–∫—É–Ω–¥—É –æ–±–Ω–æ–≤–ª—è–µ—Ç —á–∞—Ç.
async def refresh_msg(nickname, msg_box):
    global chat_msgs
    last_idx = len(chat_msgs)

    while True:
        # –∫–∞–∂–¥—É—é 1 - —Å–µ–∫—É–Ω–¥—É
        await asyncio.sleep(1)

        for m in chat_msgs[last_idx:]:
            if m[0] != nickname:
                msg_box.append(put_markdown(f"`{m[0]}` : {m[1]}"))

        # –û—á–∏—â–∞–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –±–æ–ª—å—à–µ –ø—Ä–µ–¥–µ–ª–∞ Max_messages_count
        if len(chat_msgs) > MAX_MESSAGES_COUNT:
            chat_msgs = chat_msgs[len(chat_msgs) // 2:]

        last_idx = len(chat_msgs)


# –∑–∞–ø—É—Å–∫–∞–µ–º web —Å–µ—Ä–≤–µ—Ä (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ tornado. –ú–æ–∂–Ω–æ django flask fast api)
if __name__ == "__main__":
    start_server(main, debug=True, port=5000, cdn=False)
